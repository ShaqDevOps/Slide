name: Deploy Slide App

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  

    steps:
    # Step 1: Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: us-east-1

    # Step 3: Authenticate to DockerHub
    - name: Authenticate to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Cache Docker Layers
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Step 5: Build and Push Backend Image
    - name: Build and push backend image
      run: |
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          --push \
          --platform linux/amd64,linux/arm64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/slide_backend ./slide_backend

    # Step 6: Build and Push Frontend Image
    - name: Build and push frontend image
      run: |
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          --push \
          --platform linux/amd64,linux/arm64 \
          --tag ${{ secrets.DOCKER_USERNAME }}/slide_frontend ./slide_frontend

    # Step 7: Set up kubectl
    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin

    # Step 8: Update kubeconfig for EKS
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region us-east-1 --name ${{ secrets.CLUSTER_NAME }}

    # Step 9: Deploy to Kubernetes and Update Images
    - name: Deploy to Kubernetes
      run: |
        # Apply Kubernetes manifests
        kubectl apply -f kubernetes/backend/backend-deployment.yaml
        kubectl apply -f kubernetes/backend/backend-service.yaml
        kubectl apply -f kubernetes/frontend/frontend-deployment.yaml
        kubectl apply -f kubernetes/frontend/frontend-service.yaml

        # Update images for backend and frontend
        kubectl set image deployment/slide-backend \
          backend=${{ secrets.DOCKER_USERNAME }}/slide_backend:latest -n slide
        kubectl set image deployment/slide-frontend \
          frontend=${{ secrets.DOCKER_USERNAME }}/slide_frontend:latest -n slide

        # Force redeploy by patching deployment annotations with the current timestamp
        kubectl patch deployment slide-backend -n slide -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date +%s)\"}}}}}"
        kubectl patch deployment slide-frontend -n slide -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date +%s)\"}}}}}"

        # Check rollout status
        kubectl rollout status deployment/slide-backend -n slide
        kubectl rollout status deployment/slide-frontend -n slide
